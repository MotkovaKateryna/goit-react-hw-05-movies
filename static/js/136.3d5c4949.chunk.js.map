{"version":3,"file":"static/js/136.3d5c4949.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails/movie-details.module.scss?cb87","pages/MovieDetails/MovieDetails.jsx","shared/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"movie-details_container__Jv1ir\",\"flex\":\"movie-details_flex__aDzbF\",\"image\":\"movie-details_image__idb6Z\",\"info\":\"movie-details_info__i1bOx\",\"add\":\"movie-details_add__Q53Gh\",\"list\":\"movie-details_list__2m6t2\",\"link\":\"movie-details_link__k0S34\"};","\nimport {useState,useEffect} from \"react\";\nimport { Outlet, Link, useParams, useNavigate, useLocation } from 'react-router-dom';\n\nimport {getMovieById} from \"../../shared/api\";\n\nimport styles from \"./movie-details.module.scss\"\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState();\n    const {id} = useParams();\n\n    const navigate = useNavigate();\n    const location = useLocation();\n     const from = location.state?.from || '/';\n    \n\n\n\n    useEffect(()=>{\n        const fetchMovie = async ()=> {\n            try{\n                const result = await getMovieById(id);\n                setMovie(result);\n            }\n            catch({response}){\n                console.log(response.data.message);\n            }\n        }\n        fetchMovie()\n    },[id]);\n\n    if(movie) {\n        const {\n        genres,\n        title,\n        overview,\n        poster_path,\n        release_date,\n        vote_average,\n      } = movie;\n      const year = release_date.slice(0,4);\n\n      const genre = genres.map((genre) => genre.name).join(', ');\n\n      const noPosterImg = 'https://www.preupdv.cl/invitacionpdv/img/pelicula.png';\n\n      function generatePosterImg(poster_path) {\n        if (poster_path === null) {\n          return noPosterImg;\n        }\n        return `https://image.tmdb.org/t/p/w500${poster_path}`;\n      }\n\n      return (<div className={styles.container}>\n        <button onClick={() => navigate(from)} className={styles.button}> Go back</button>\n        <div className={styles.flex}>\n          <div><img src={generatePosterImg(poster_path)} width='250' height='350' alt={title} className={styles.image}/></div>\n          <div>\n            <h2>{title} ({year})</h2>\n            <p>Use Score: {vote_average.toFixed(1)}</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <p>{genre}</p>\n          </div>\n        </div>\n\n            <h3 className={styles.add}>Additional information</h3>\n            <ul className={styles.info}>\n            <Link to='cast' state={{from}} className={styles.link}><li className={styles.list}>Cast</li></Link >\n            <Link to='reviews' state={{from}} className={styles.link}><li className={styles.list}>Reviews</li></Link >\n            </ul>\n            <Outlet/>\n            \n        </div>\n    )\n    }\n    }\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '86eb0a0633e53490d444bb214710bd0c',\n  },\n});\n\n\nexport const getAllMovies = async () => {\n  const {data} = await instance.get(\"/trending/movie/day\");\n  return data; \n\n}\n\nexport const getMovieById = async (id) => {\n  const {data} = await instance.get(`/movie/${id}`);\n  return data; \n}\n\n\nexport const searchMovies = async (search, page) => { \n  const { data } = await instance.get(\"/search/movie\", {\n    params: {\n      query:search,\n      page,\n      include_adult: \"false\",\n      language: 'en-US',\n    },\n  });\n  return data;\n\n};\n\n\n\nexport const getCastMovieById = async (id) => {\n  const {data} = await instance.get(`/movie/${id}/credits`);\n  return data; \n}\n\nexport const getReviewMovieById = async (id) => {\n  const {data} = await instance.get(`/movie/${id}/reviews`);\n  return data; \n}"],"names":["useState","movie","setMovie","id","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovie","getMovieById","result","response","console","log","data","message","genres","title","overview","poster_path","release_date","vote_average","year","slice","genre","map","name","join","noPosterImg","className","styles","onClick","src","generatePosterImg","width","height","alt","toFixed","to","instance","axios","baseURL","params","api_key","getAllMovies","get","searchMovies","search","page","query","include_adult","language","getCastMovieById","getReviewMovieById"],"sourceRoot":""}